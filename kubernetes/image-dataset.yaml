apiVersion: v1
kind: Namespace
metadata:
  name: image-dataset

---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: postgres-storage-class
provisioner: driver.longhorn.io
allowVolumeExpansion: true
parameters:
  numberOfReplicas: "2"
  staleReplicaTimeout: "2880" # 48 hours in minutes
  fromBackup: ""
  fsType: "ext4"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-volume-claim
  namespace: image-dataset
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: postgres-storage-class
  resources:
    requests:
      storage: 100Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deployment
  namespace: image-dataset
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      namespace: image-dataset
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: docker.io/pgvector/pgvector:0.8.0-pg16
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: volv
              mountPath: /var/lib/postgresql/data
          env:
            - name: POSTGRES_PASSWORD
              value: wert1234
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
      volumes:
        - name: volv
          persistentVolumeClaim:
            claimName: postgres-volume-claim

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: image-dataset
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP

---
apiVersion: ceph.rook.io/v1
kind: CephCluster
metadata:
  name: blob-storage
  namespace: image-dataset
spec:
  dataDirHostPath: /var/lib/rook
  cephVersion:
    image: quay.io/ceph/ceph:v19
    allowUnsupported: true
  mon:
    count: 1
    allowMultiplePerNode: true
  mgr:
    count: 1
    allowMultiplePerNode: true
    modules:
      - name: rook
        enabled: true
  dashboard:
    enabled: true
  crashCollector:
    disable: true
  storage:
    useAllNodes: true
    useAllDevices: true
    allowDeviceClassUpdate: true
    allowOsdCrushWeightUpdate: false
  monitoring:
    enabled: false
  healthCheck:
    daemonHealth:
      mon:
        interval: 45s
        timeout: 600s
  priorityClassNames:
    all: system-node-critical
    mgr: system-cluster-critical
  disruptionManagement:
    managePodBudgets: true
  cephConfig:
    global:
      osd_pool_default_size: "1"
      mon_warn_on_pool_no_redundancy: "false"
      bdev_flock_retry: "20"
      bluefs_buffered_io: "false"
      mon_data_avail_warn: "10"
---
apiVersion: ceph.rook.io/v1
kind: CephBlockPool
metadata:
  name: blob-storage-mgr
  namespace: image-dataset
spec:
  name: .mgr
  replicated:
    size: 1
    requireSafeReplicaSize: false
