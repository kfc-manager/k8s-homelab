---
- name: Initialize Kubernetes
  hosts: raspi
  become: yes
  tasks:
    - name: Set hostname
      shell: |
        hostnamectl set-hostname "{{ inventory_hostname }}"

    - name: Set node routing
      ansible.builtin.copy:
        dest: /etc/hosts
        content: |
          127.0.0.1	localhost
          ::1		localhost ip6-localhost ip6-loopback
          ff02::1		ip6-allnodes
          ff02::2		ip6-allrouters

          # Ansible managed entries
          {% for host in ansible_play_hosts %}
          {{ hostvars[host]['ansible_default_ipv4']['address'] }} {{ host }} {{ host }}
          {% endfor %}
        owner: root
        group: root
        mode: "0644"

    - name: Disable swap memory
      shell: |
        swapoff -a &&
        sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

    - name: Configure containerd and kubernetes routing
      shell: |
        tee /etc/modules-load.d/containerd.conf <<EOF
        overlay
        br_netfilter
        EOF &&
        modprobe overlay &&
        modprobe br_netfilter &&
        tee /etc/sysctl.d/kubernetes.conf <<EOF
        net.bridge.bridge-nf-call-ip6tables = 1
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        EOF &&
        sysctl --system

    - name: Update apt package list
      apt:
        update_cache: yes
        cache_valid_time: 3600

    - name: Install dependencies
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - socat
          - gnupg2
        state: present

    - name: Install containerd
      shell: |
        rm -rf /etc/apt/trusted.gpg.d/docker.gpg &&
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg &&
        add-apt-repository -y "deb [arch=arm64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" &&
        apt update &&
        apt install -y containerd.io &&
        containerd config default | tee /etc/containerd/config.toml >/dev/null 2>&1 &&
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml &&
        systemctl restart containerd &&
        systemctl enable containerd

    - name: Install Kubernetes
      shell: |
        rm -rf /etc/apt/keyrings/kubernetes-apt-keyring.gpg &&
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /" | tee /etc/apt/sources.list.d/kubernetes.list &&
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg &&
        apt update &&
        apt install -y kubelet kubeadm kubectl &&
        apt-mark hold kubelet kubeadm kubectl

    - name: Install Docker
      shell: |
        apt-get install -y docker-ce

    - name: Open Kubernetes API port
      shell: |
        iptables -A INPUT -p tcp --dport 6443 -j ACCEPT
